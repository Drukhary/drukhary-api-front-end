{"version":3,"sources":["utils/post.js","services/post-manager-service.js","components/row-groups/index.js","components/row-groups/row-groups.js","components/post-manager-service-context/post-manager-service-context.js","components/post-gallery/post-gallery.js","components/post-gallery/index.js","components/post/index.js","components/post/post.js","components/post-list/index.js","components/post-list/post-list.js","components/add-panel/index.js","components/add-panel/add-panel.js","components/app/index.js","components/app/app.js","index.js"],"names":["FuturePost","owner_id","friends_only","from_group","message","signed","publish_date","PostManagerService","getGroups","name","getTimers","date","Date","getHours","getMinutes","getPosts","post1","images","original","thumbnail","post2","getImages","RowGroups","groupListRendered","groups","map","group","Fragment","type","className","id","autoComplete","checked","to","for","console","log","role","aria-label","React","createContext","PostManagerServiceProvider","Provider","PostManagerServiceConsumer","Consumer","PREFIX_URL","PostGallery","props","state","showIndex","showBullets","infinite","showThumbnails","showFullscreenButton","showGalleryFullscreenButton","showPlayButton","showGalleryPlayButton","showNav","isRTL","slideDuration","slideInterval","slideOnThumbnailOver","thumbnailPosition","showVideo","useWindowKeyDown","event","debug","target","this","_imageGallery","getCurrentIndex","src","index","_resetVideo","fullScreenElement","i","push","setState","url","Boolean","item","embedUrl","onClick","_toggleShowVideo","bind","title","width","height","frameBorder","allowFullScreen","alt","description","style","right","left","ref","items","_onImageClick","onImageLoad","_onImageLoad","onSlide","_onSlide","onPause","_onPause","onScreenChange","_onScreenChange","onPlay","_onPlay","parseInt","additionalClass","Component","Post","PostList","listItems","posts","post","AddPanel","handleChange","e","value","handleSubmit","preventDefault","form","data-dashlane-rid","data-form-type","htmlFor","rows","onChange","multiple","data-dashlane-label","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52bcb28f.chunk.js","sourcesContent":["export default class FuturePost {\r\n    owner_id=0;\r\n    friends_only=0;\r\n    from_group=0;\r\n    message=0;\r\n    // attachments=[];\r\n    signed=0;\r\n    publish_date=0;\r\n    // guid=0;\r\n}","import FuturePost from \"../utils/post\";\r\n\r\nconst SECOND = 10000000;\r\nconst MINUTE = SECOND * 60;\r\nconst HOUR = MINUTE * 60;\r\nconst DAY = HOUR * 24;\r\n\r\n\r\nexport default class PostManagerService {\r\n    getGroups = () => {\r\n        return [\r\n            {name: \"vectorianstvo\"},\r\n            {name: \"solarrider\"},\r\n            {name: \"sectanstvo\"},\r\n            {name: \"what a hell is happening\"},\r\n            {name: \"drukhary\"},\r\n            {name: \"warhammer40K\"}\r\n        ];\r\n    }\r\n    getTimers = () => {\r\n        const date = new Date();\r\n        return [`${date.getHours()}:${date.getMinutes()}`]\r\n    }\r\n    getPosts = () => {\r\n        const post1= new FuturePost();\r\n        post1.friends_only=0;\r\n        post1.owner_id=0;\r\n        post1.message='text ';\r\n        post1.publish_date=0;\r\n        post1.images = [\r\n            {\r\n            original: 'https://picsum.photos/id/1018/1000/600/',\r\n            thumbnail: 'https://picsum.photos/id/1018/250/150/',\r\n        }\r\n        ];\r\n        const post2={...post1};\r\n        post2.images=[        {\r\n            original: 'https://picsum.photos/id/1018/1000/600/',\r\n            thumbnail: 'https://picsum.photos/id/1018/250/150/',\r\n        },\r\n            {\r\n                original: 'https://picsum.photos/id/1015/1000/600/',\r\n                thumbnail: 'https://picsum.photos/id/1015/250/150/',\r\n            },\r\n            {\r\n                original: 'https://picsum.photos/id/1019/1000/600/',\r\n                thumbnail: 'https://picsum.photos/id/1019/250/150/',\r\n            },];\r\n        return [\r\n            post2,\r\n            post1\r\n        ];\r\n    }\r\n    getImages = () => [\r\n        // {\r\n        //     src: 'https://picsum.photos/id/1018/250/150/',\r\n        //     title: 'image title',\r\n        //     description: 'image description'\r\n        // },\r\n        // {\r\n        //     src: 'https://picsum.photos/id/1015/250/150/',\r\n        //     title: 'image title',\r\n        //     description: 'image description'\r\n        // },\r\n        // {\r\n        //     src: 'https://picsum.photos/id/1019/250/150/',\r\n        //     title: 'image title',\r\n        //     description: 'image description'\r\n        // },\r\n        {\r\n            original: 'https://picsum.photos/id/1018/1000/600/',\r\n            thumbnail: 'https://picsum.photos/id/1018/250/150/',\r\n        },\r\n        {\r\n            original: 'https://picsum.photos/id/1015/1000/600/',\r\n            thumbnail: 'https://picsum.photos/id/1015/250/150/',\r\n        },\r\n        {\r\n            original: 'https://picsum.photos/id/1019/1000/600/',\r\n            thumbnail: 'https://picsum.photos/id/1019/250/150/',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n}","import RowGroups from \"./row-groups\";\r\nexport default RowGroups;","import React, {ReactFragment} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst RowGroups = ({groups}) => {\r\n    const groupListRendered = groups.map(group => {\r\n            const {name} = group;\r\n            return (\r\n                <React.Fragment>\r\n                    <input type=\"radio\" className=\"btn-check\" name=\"btnradio\" id={name} autoComplete=\"off\"\r\n                           checked=\"\"/>\r\n                    <Link to={`/${name}`} className=\"btn btn-outline-primary\" for={name}>{name}</Link>\r\n                </React.Fragment>\r\n            )\r\n        });\r\n    console.log(groupListRendered);\r\n    return (\r\n        <div className=\"btn-group d-flex\" role=\"group\" aria-label=\"Basic radio toggle button group\">\r\n            {groupListRendered}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RowGroups;","import React from \"react\";\r\nimport PostManagerService from \"../../services/post-manager-service\";\r\n\r\nconst {\r\n    Provider:PostManagerServiceProvider,\r\n    Consumer:PostManagerServiceConsumer\r\n} = React.createContext(new PostManagerService());\r\n\r\nexport {PostManagerServiceConsumer,PostManagerServiceProvider};","import React, {Component} from 'react';\r\n\r\nimport ImageGallery from 'react-image-gallery';\r\nimport './post-gallery.css';\r\n\r\nconst PREFIX_URL = 'https://raw.githubusercontent.com/xiaolin/react-image-gallery/master/static/';\r\n\r\nexport default class PostGallery extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showIndex: true,\r\n            showBullets: true,\r\n            infinite: true,\r\n            showThumbnails: true,\r\n            showFullscreenButton: true,\r\n            showGalleryFullscreenButton: true,\r\n            showPlayButton: true,\r\n            showGalleryPlayButton: true,\r\n            showNav: true,\r\n            isRTL: false,\r\n            slideDuration: 450,\r\n            slideInterval: 2000,\r\n            slideOnThumbnailOver: false,\r\n            thumbnailPosition: 'top',\r\n            showVideo: {},\r\n            useWindowKeyDown: true,\r\n        };\r\n\r\n        this.images = this.props.images;\r\n            // {\r\n            //     thumbnail: `${PREFIX_URL}4v.jpg`,\r\n            //     original: `${PREFIX_URL}4v.jpg`,\r\n            //     embedUrl: 'https://www.youtube.com/embed/4pSzhZ76GdM?autoplay=1&showinfo=0',\r\n            //     description: 'description',\r\n            //     renderItem: this._renderVideo.bind(this)\r\n            // },\r\n            // {\r\n            //     original: `${PREFIX_URL}1.jpg`,\r\n            //     thumbnail: `${PREFIX_URL}1t.jpg`,\r\n            //     originalClass: 'featured-slide',\r\n            //     thumbnailClass: 'featured-thumb',\r\n            //     description: 'description',\r\n            // },\r\n        // ].concat(this._getStaticImages());\r\n    }\r\n\r\n    _onImageClick(event) {\r\n        console.debug('clicked on image', event.target, 'at index', this._imageGallery.getCurrentIndex());\r\n    }\r\n\r\n    _onImageLoad(event) {\r\n        console.debug('loaded image', event.target.src);\r\n    }\r\n\r\n    _onSlide(index) {\r\n        this._resetVideo();\r\n        console.debug('slid to index', index);\r\n    }\r\n\r\n    _onPause(index) {\r\n        console.debug('paused on index', index);\r\n    }\r\n\r\n    _onScreenChange(fullScreenElement) {\r\n        console.debug('isFullScreen?', !!fullScreenElement);\r\n    }\r\n\r\n    _onPlay(index) {\r\n        console.debug('playing from index', index);\r\n    }\r\n\r\n    _getStaticImages() {\r\n        let images = [];\r\n        for (let i = 2; i < 12; i++) {\r\n            images.push({\r\n                original: `${PREFIX_URL}${i}.jpg`,\r\n                thumbnail: `${PREFIX_URL}${i}t.jpg`\r\n            });\r\n        }\r\n\r\n        return images;\r\n    }\r\n\r\n    _resetVideo() {\r\n        this.setState({showVideo: {}});\r\n\r\n        if (this.state.showPlayButton) {\r\n            this.setState({showGalleryPlayButton: true});\r\n        }\r\n\r\n        if (this.state.showFullscreenButton) {\r\n            this.setState({showGalleryFullscreenButton: true});\r\n        }\r\n    }\r\n\r\n    _toggleShowVideo(url) {\r\n        // eslint-disable-next-line react/no-direct-mutation-state\r\n        this.state.showVideo[url] = !Boolean(this.state.showVideo[url]);\r\n        this.setState({\r\n            showVideo: this.state.showVideo\r\n        });\r\n\r\n        if (this.state.showVideo[url]) {\r\n            if (this.state.showPlayButton) {\r\n                this.setState({showGalleryPlayButton: false});\r\n            }\r\n\r\n            if (this.state.showFullscreenButton) {\r\n                this.setState({showGalleryFullscreenButton: false});\r\n            }\r\n        }\r\n    }\r\n\r\n    _renderVideo(item) {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.showVideo[item.embedUrl] ?\r\n                        <div className='video-wrapper'>\r\n                            <a\r\n                                className='close-video'\r\n                                onClick={this._toggleShowVideo.bind(this, item.embedUrl)}\r\n                            >\r\n                            </a>\r\n                            <iframe\r\n                                title={item.title}\r\n                                width='560'\r\n                                height='315'\r\n                                src={item.embedUrl}\r\n                                frameBorder='0'\r\n                                allowFullScreen\r\n                            >\r\n                            </iframe>\r\n                        </div>\r\n                        :\r\n                        <a onClick={this._toggleShowVideo.bind(this, item.embedUrl)}>\r\n                            <div className='play-button'/>\r\n                            <img className='image-gallery-image' src={item.original} alt={\"I'm sorry\"}/>\r\n                            {\r\n                                item.description &&\r\n                                <span\r\n                                    className='image-gallery-description'\r\n                                    style={{right: '0', left: 'initial'}}\r\n                                >\r\n                                    {item.description}\r\n                                </span>\r\n                            }\r\n                        </a>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <section className='app'>\r\n                <ImageGallery\r\n                    ref={i => this._imageGallery = i}\r\n                    items={this.images}\r\n                    onClick={this._onImageClick.bind(this)}\r\n                    onImageLoad={this._onImageLoad}\r\n                    onSlide={this._onSlide.bind(this)}\r\n                    onPause={this._onPause.bind(this)}\r\n                    onScreenChange={this._onScreenChange.bind(this)}\r\n                    onPlay={this._onPlay.bind(this)}\r\n                    infinite={this.state.infinite}\r\n                    showBullets={this.state.showBullets}\r\n                    showFullscreenButton={this.state.showFullscreenButton && this.state.showGalleryFullscreenButton}\r\n                    // showPlayButton={this.state.showPlayButton && this.state.showGalleryPlayButton}\r\n                    showThumbnails={this.state.showThumbnails}\r\n                    showIndex={this.state.showIndex}\r\n                    showNav={this.state.showNav}\r\n                    isRTL={this.state.isRTL}\r\n                    thumbnailPosition={this.state.thumbnailPosition}\r\n                    slideDuration={parseInt(this.state.slideDuration)}\r\n                    slideInterval={parseInt(this.state.slideInterval)}\r\n                    slideOnThumbnailOver={this.state.slideOnThumbnailOver}\r\n                    additionalClass=\"app-image-gallery\"\r\n                    useWindowKeyDown={this.state.useWindowKeyDown}\r\n                />\r\n\r\n                {/* <div className='app-sandbox'>\r\n\r\n          <div className='app-sandbox-content'>\r\n            <h2 className='app-header'>Settings</h2>\r\n\r\n            <ul className='app-buttons'>\r\n              <li>\r\n                <div className='app-interval-input-group'>\r\n                  <span className='app-interval-label'>Play Interval</span>\r\n                  <input\r\n                    className='app-interval-input'\r\n                    type='text'\r\n                    onChange={this._handleInputChange.bind(this, 'slideInterval')}\r\n                    value={this.state.slideInterval}/>\r\n                </div>\r\n              </li>\r\n\r\n              <li>\r\n                <div className='app-interval-input-group'>\r\n                  <span className='app-interval-label'>Slide Duration</span>\r\n                  <input\r\n                    className='app-interval-input'\r\n                    type='text'\r\n                    onChange={this._handleInputChange.bind(this, 'slideDuration')}\r\n                    value={this.state.slideDuration}/>\r\n                </div>\r\n              </li>\r\n\r\n              <li>\r\n                <div className='app-interval-input-group'>\r\n                  <span className='app-interval-label'>Thumbnail Bar Position</span>\r\n                  <select\r\n                    className='app-interval-input'\r\n                    value={this.state.thumbnailPosition}\r\n                    onChange={this._handleThumbnailPositionChange.bind(this)}\r\n                  >\r\n                    <option value='bottom'>Bottom</option>\r\n                    <option value='top'>Top</option>\r\n                    <option value='left'>Left</option>\r\n                    <option value='right'>Right</option>\r\n                  </select>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n\r\n            <ul className='app-checkboxes'>\r\n              <li>\r\n                <input\r\n                  id='infinite'\r\n                  type='checkbox'\r\n                  onChange={this._handleCheckboxChange.bind(this, 'infinite')}\r\n                  checked={this.state.infinite}/>\r\n                  <label htmlFor='infinite'>allow infinite sliding</label>\r\n              </li>\r\n              <li>\r\n                <input\r\n                  id='show_fullscreen'\r\n                  type='checkbox'\r\n                  onChange={this._handleCheckboxChange.bind(this, 'showFullscreenButton')}\r\n                  checked={this.state.showFullscreenButton}/>\r\n                  <label htmlFor='show_fullscreen'>show fullscreen button</label>\r\n              </li>\r\n              <li>\r\n                <input\r\n                  id='show_playbutton'\r\n                  type='checkbox'\r\n                  onChange={this._handleCheckboxChange.bind(this, 'showPlayButton')}\r\n                  checked={this.state.showPlayButton}/>\r\n                  <label htmlFor='show_playbutton'>show play button</label>\r\n              </li>\r\n              <li>\r\n                <input\r\n                  id='show_bullets'\r\n                  type='checkbox'\r\n                  onChange={this._handleCheckboxChange.bind(this, 'showBullets')}\r\n                  checked={this.state.showBullets}/>\r\n                  <label htmlFor='show_bullets'>show bullets</label>\r\n              </li>\r\n              <li>\r\n                <input\r\n                  id='show_thumbnails'\r\n                  type='checkbox'\r\n                  onChange={this._handleCheckboxChange.bind(this, 'showThumbnails')}\r\n                  checked={this.state.showThumbnails}/>\r\n                  <label htmlFor='show_thumbnails'>show thumbnails</label>\r\n              </li>\r\n              <li>\r\n                <input\r\n                  id='show_navigation'\r\n                  type='checkbox'\r\n                  onChange={this._handleCheckboxChange.bind(this, 'showNav')}\r\n                  checked={this.state.showNav}/>\r\n                  <label htmlFor='show_navigation'>show navigation</label>\r\n              </li>\r\n              <li>\r\n                <input\r\n                  id='show_index'\r\n                  type='checkbox'\r\n                  onChange={this._handleCheckboxChange.bind(this, 'showIndex')}\r\n                  checked={this.state.showIndex}/>\r\n                  <label htmlFor='show_index'>show index</label>\r\n              </li>\r\n              <li>\r\n                <input\r\n                  id='is_rtl'\r\n                  type='checkbox'\r\n                  onChange={this._handleCheckboxChange.bind(this, 'isRTL')}\r\n                  checked={this.state.isRTL}/>\r\n                  <label htmlFor='is_rtl'>is right to left</label>\r\n              </li>\r\n              <li>\r\n                <input\r\n                  id='slide_on_thumbnail_hover'\r\n                  type='checkbox'\r\n                  onChange={this._handleCheckboxChange.bind(this, 'slideOnThumbnailOver')}\r\n                  checked={this.state.slideOnThumbnailOver}/>\r\n                  <label htmlFor='slide_on_thumbnail_hover'>slide on mouse over thumbnails</label>\r\n              </li>\r\n              <li>\r\n                <input\r\n                  id='use_window_keydown'\r\n                  type='checkbox'\r\n                  onChange={this._handleCheckboxChange.bind(this, 'useWindowKeyDown')}\r\n                  checked={this.state.useWindowKeyDown}/>\r\n                  <label htmlFor='use_window_keydown'>use window keydown</label>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n\r\n        </div> */}\r\n            </section>\r\n        );\r\n    }\r\n}","import PostGallery from \"./post-gallery\";\r\nexport default PostGallery;","import Post from \"./post\";\r\nexport default Post;","import React from \"react\";\r\nimport \"./post.css\";\r\nimport PostGallery from \"../post-gallery\";\r\n\r\nconst Post = ({message, images}) => {\r\n    return (\r\n        <div className='justify-content-center'>\r\n            <div className=\"d-flex w-100\">\r\n\r\n            </div>\r\n            <h5 className=\"mb-1\">Какой-то заголовок, не уверен, что он нужен</h5>\r\n            <small className=\"text-muted\">Тут будет ближайшее время постинга</small>\r\n            <p className=\"mb-1\">{message}</p>\r\n            <PostGallery images={images}/>\r\n            <small className=\"text-muted\">Время, когда оно было предложено</small>\r\n        </div>\r\n    )\r\n}\r\nexport default Post;","import PostList from \"./post-list\";\r\nexport default PostList;","import React from \"react\";\r\nimport Post from \"../post\";\r\n\r\nconst PostList = ({posts}) => {\r\n    const listItems = posts.map(post => {\r\n        const {message,images} = post;\r\n        return (\r\n        <div className=\"list-group-item list-group-item-action flex-column align-items-start\">\r\n            <Post message={message} images={images}/>\r\n        </div>\r\n        )\r\n    });\r\n    return (\r\n            <div className=\"post-list list-group justify-content-center\">\r\n                {listItems}\r\n            </div>\r\n    )\r\n}\r\nexport default PostList;","import AddPanel from \"./add-panel\";\r\n\r\nexport default AddPanel;","import React, {Component} from 'react';\r\n\r\nexport default class AddPanel extends Component {\r\n    state = {\r\n        message: ''\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({message: e.target.value})\r\n    }\r\n\r\n    handleUpdate(form) {\r\n        console.log(form)\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state.message);\r\n    }\r\n\r\n    render() {\r\n        const {message} = this.state;\r\n        const {handleChange, handleSubmit} = this;\r\n        return (\r\n            <div className=\"add-panel row justify-content-center\">\r\n                <form className='col-sm-4' data-dashlane-rid=\"8ae3f8bcca604e53\" data-form-type=\"ot\">\r\n                    <fieldset>\r\n                        <legend>Пост</legend>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"messageField\" className=\"form-label mt-4\">Введите текст поста</label>\r\n                            <textarea className=\"form-control\" id=\"messageField\" rows=\"6\"\r\n                                      data-dashlane-rid=\"c6d6a82a50c70dfa\" data-form-type=\"other\"\r\n                                      value={message} onChange={handleChange}/>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"formFile\" className=\"form-label mt-4\">Прикрепите файлы</label>\r\n                            <input className=\"form-control\" type=\"file\" id=\"formFile\"\r\n                                   data-dashlane-rid=\"593a641d2ae27fb0\"\r\n                                   data-form-type=\"other\" multiple/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <button type=\"button\" className=\"form-control btn btn-primary\" data-dashlane-rid=\"85d62f37c4e4b00f\"\r\n                                    data-dashlane-label=\"true\" data-form-type=\"action\"\r\n                                    onClick={handleSubmit}>Подготовить к публикации\r\n                            </button>\r\n                        </div>\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import App from \"./app\";\r\nexport default App;","import React from \"react\";\r\nimport './app.css';\r\nimport RowGroups from \"../row-groups\";\r\nimport {PostManagerServiceConsumer} from \"../post-manager-service-context\";\r\nimport PostList from \"../post-list\";\r\nimport AddPanel from \"../add-panel\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <PostManagerServiceConsumer>{\r\n                value => (\r\n                    <React.Fragment>\r\n                        <RowGroups groups={value.getGroups()}/>\r\n                        <AddPanel/>\r\n                        <PostList posts={value.getPosts()}/>\r\n\r\n                    </React.Fragment>\r\n                )\r\n            }\r\n            </PostManagerServiceConsumer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport PostManagerService from './services/post-manager-service';\n\nimport './index.css';\nimport App from \"./components/app\";\nimport {PostManagerServiceProvider} from \"./components/post-manager-service-context\";\n\nReactDOM.render(\n    <React.StrictMode>\n            <PostManagerServiceProvider value={new PostManagerService()}>\n                <Router>\n                    <App/>\n                </Router>\n            </PostManagerServiceProvider>\n    </React.StrictMode>\n    ,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}