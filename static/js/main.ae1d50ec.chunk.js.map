{"version":3,"sources":["utils/post.js","services/post-manager-service.js","components/post-manager-service-context/post-manager-service-context.js","components/post-gallery/post-gallery.js","components/post-gallery/index.js","components/post/index.js","components/post/post.js","components/post-list/index.js","components/post-list/post-list.js","services/nasa-api-gov.js","components/add-panel/add-panel.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/app/index.js","components/app/app.js","index.js"],"names":["FuturePost","owner_id","friends_only","from_group","message","signed","publish_date","PostManagerService","getGroups","name","getTimers","date","Date","getHours","getMinutes","getPosts","post1","images","original","thumbnail","post2","post3","getImages","React","createContext","PostManagerServiceProvider","Provider","Consumer","PREFIX_URL","PostGallery","props","state","showIndex","showBullets","infinite","showThumbnails","showFullscreenButton","showGalleryFullscreenButton","showPlayButton","showGalleryPlayButton","showNav","isRTL","slideDuration","slideInterval","slideOnThumbnailOver","thumbnailPosition","showVideo","useWindowKeyDown","event","console","debug","target","this","_imageGallery","getCurrentIndex","src","index","_resetVideo","fullScreenElement","i","push","setState","url","Boolean","item","embedUrl","className","onClick","_toggleShowVideo","bind","title","width","height","frameBorder","allowFullScreen","alt","description","style","right","left","ref","items","_onImageClick","onImageLoad","_onImageLoad","onSlide","_onSlide","onPause","_onPause","onScreenChange","_onScreenChange","onPlay","_onPlay","parseInt","additionalClass","Component","Post","dateCreated","keywords","join","PostList","listItems","posts","map","post","data","date_created","image","id","Array","isArray","length","NasaApiGov","_baseApi","getSearch","searchString","fetch","then","response","json","collection","Promise","all","href","list","slice","uris","resolve","catch","err","SearchPanel","useState","setSearchString","htmlFor","type","placeholder","data-dashlane-rid","data-form-type","value","onChange","e","onKeyPress","key","setSearch","App","listPosts","setListPosts","search","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae1d50ec.chunk.js","sourcesContent":["export default class FuturePost {\r\n    owner_id=0;\r\n    friends_only=0;\r\n    from_group=0;\r\n    message=0;\r\n    // attachments=[];\r\n    signed=0;\r\n    publish_date=0;\r\n    // guid=0;\r\n}","import FuturePost from \"../utils/post\";\r\n\r\nconst SECOND = 10000000;\r\nconst MINUTE = SECOND * 60;\r\nconst HOUR = MINUTE * 60;\r\nconst DAY = HOUR * 24;\r\n\r\n\r\nexport default class PostManagerService {\r\n    getGroups = () => {\r\n        return [\r\n            {name: \"vectorianstvo\"},\r\n            {name: \"solarrider\"},\r\n            {name: \"sectanstvo\"},\r\n            {name: \"what a hell is happening\"},\r\n            {name: \"drukhary\"},\r\n            {name: \"warhammer40K\"}\r\n        ];\r\n    }\r\n    getTimers = () => {\r\n        const date = new Date();\r\n        return [`${date.getHours()}:${date.getMinutes()}`]\r\n    }\r\n    getPosts = () => {\r\n        const post1= new FuturePost();\r\n        post1.friends_only=0;\r\n        post1.owner_id=0;\r\n        post1.message='post1';\r\n        post1.publish_date=0;\r\n        post1.images = [\r\n            {\r\n            original: 'https://picsum.photos/id/1018/1000/600/',\r\n            thumbnail: 'https://picsum.photos/id/1018/250/150/',\r\n        }\r\n        ];\r\n        const post2={...post1};\r\n        post2.message='post2';\r\n        const post3={...post1};\r\n        post3.images=[];\r\n        post2.images=[        {\r\n            original: 'https://picsum.photos/id/1018/1000/600/',\r\n            thumbnail: 'https://picsum.photos/id/1018/250/150/',\r\n        },\r\n            {\r\n                original: 'https://picsum.photos/id/1015/1000/600/',\r\n                thumbnail: 'https://picsum.photos/id/1015/250/150/',\r\n            },\r\n            {\r\n                original: 'https://picsum.photos/id/1019/1000/600/',\r\n                thumbnail: 'https://picsum.photos/id/1019/250/150/',\r\n            },];\r\n        return [\r\n            post2,\r\n            post3,\r\n            post1\r\n        ];\r\n    }\r\n    getImages = () => [\r\n        // {\r\n        //     src: 'https://picsum.photos/id/1018/250/150/',\r\n        //     title: 'image title',\r\n        //     description: 'image description'\r\n        // },\r\n        // {\r\n        //     src: 'https://picsum.photos/id/1015/250/150/',\r\n        //     title: 'image title',\r\n        //     description: 'image description'\r\n        // },\r\n        // {\r\n        //     src: 'https://picsum.photos/id/1019/250/150/',\r\n        //     title: 'image title',\r\n        //     description: 'image description'\r\n        // },\r\n        {\r\n            original: 'https://picsum.photos/id/1018/1000/600/',\r\n            thumbnail: 'https://picsum.photos/id/1018/250/150/',\r\n        },\r\n        {\r\n            original: 'https://picsum.photos/id/1015/1000/600/',\r\n            thumbnail: 'https://picsum.photos/id/1015/250/150/',\r\n        },\r\n        {\r\n            original: 'https://picsum.photos/id/1019/1000/600/',\r\n            thumbnail: 'https://picsum.photos/id/1019/250/150/',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n}","import React from \"react\";\r\nimport PostManagerService from \"../../services/post-manager-service\";\r\n\r\nconst {\r\n    Provider:PostManagerServiceProvider,\r\n    Consumer:PostManagerServiceConsumer\r\n} = React.createContext(new PostManagerService());\r\n\r\nexport {PostManagerServiceConsumer,PostManagerServiceProvider};","import React, {Component} from 'react';\r\n\r\nimport ImageGallery from 'react-image-gallery';\r\nimport './post-gallery.css';\r\n\r\nconst PREFIX_URL = 'https://raw.githubusercontent.com/xiaolin/react-image-gallery/master/static/';\r\n\r\nexport default class PostGallery extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showIndex: true,\r\n            showBullets: true,\r\n            infinite: true,\r\n            showThumbnails: true,\r\n            showFullscreenButton: true,\r\n            showGalleryFullscreenButton: true,\r\n            showPlayButton: true,\r\n            showGalleryPlayButton: true,\r\n            showNav: true,\r\n            isRTL: false,\r\n            slideDuration: 450,\r\n            slideInterval: 2000,\r\n            slideOnThumbnailOver: false,\r\n            thumbnailPosition: 'top',\r\n            showVideo: {},\r\n            useWindowKeyDown: true,\r\n        };\r\n\r\n        this.images = this.props.images;\r\n            // {\r\n            //     thumbnail: `${PREFIX_URL}4v.jpg`,\r\n            //     original: `${PREFIX_URL}4v.jpg`,\r\n            //     embedUrl: 'https://www.youtube.com/embed/4pSzhZ76GdM?autoplay=1&showinfo=0',\r\n            //     description: 'description',\r\n            //     renderItem: this._renderVideo.bind(this)\r\n            // },\r\n            // {\r\n            //     original: `${PREFIX_URL}1.jpg`,\r\n            //     thumbnail: `${PREFIX_URL}1t.jpg`,\r\n            //     originalClass: 'featured-slide',\r\n            //     thumbnailClass: 'featured-thumb',\r\n            //     description: 'description',\r\n            // },\r\n        // ].concat(this._getStaticImages());\r\n    }\r\n\r\n    _onImageClick(event) {\r\n        console.debug('clicked on image', event.target, 'at index', this._imageGallery.getCurrentIndex());\r\n    }\r\n\r\n    _onImageLoad(event) {\r\n        console.debug('loaded image', event.target.src);\r\n    }\r\n\r\n    _onSlide(index) {\r\n        this._resetVideo();\r\n        console.debug('slid to index', index);\r\n    }\r\n\r\n    _onPause(index) {\r\n        console.debug('paused on index', index);\r\n    }\r\n\r\n    _onScreenChange(fullScreenElement) {\r\n        console.debug('isFullScreen?', !!fullScreenElement);\r\n    }\r\n\r\n    _onPlay(index) {\r\n        console.debug('playing from index', index);\r\n    }\r\n\r\n    _getStaticImages() {\r\n        let images = [];\r\n        for (let i = 2; i < 12; i++) {\r\n            images.push({\r\n                original: `${PREFIX_URL}${i}.jpg`,\r\n                thumbnail: `${PREFIX_URL}${i}t.jpg`\r\n            });\r\n        }\r\n\r\n        return images;\r\n    }\r\n\r\n    _resetVideo() {\r\n        this.setState({showVideo: {}});\r\n\r\n        if (this.state.showPlayButton) {\r\n            this.setState({showGalleryPlayButton: true});\r\n        }\r\n\r\n        if (this.state.showFullscreenButton) {\r\n            this.setState({showGalleryFullscreenButton: true});\r\n        }\r\n    }\r\n\r\n    _toggleShowVideo(url) {\r\n        // eslint-disable-next-line react/no-direct-mutation-state\r\n        this.state.showVideo[url] = !Boolean(this.state.showVideo[url]);\r\n        this.setState({\r\n            showVideo: this.state.showVideo\r\n        });\r\n\r\n        if (this.state.showVideo[url]) {\r\n            if (this.state.showPlayButton) {\r\n                this.setState({showGalleryPlayButton: false});\r\n            }\r\n\r\n            if (this.state.showFullscreenButton) {\r\n                this.setState({showGalleryFullscreenButton: false});\r\n            }\r\n        }\r\n    }\r\n\r\n    _renderVideo(item) {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.showVideo[item.embedUrl] ?\r\n                        <div className='video-wrapper'>\r\n                            <a\r\n                                className='close-video'\r\n                                onClick={this._toggleShowVideo.bind(this, item.embedUrl)}\r\n                            >\r\n                            </a>\r\n                            <iframe\r\n                                title={item.title}\r\n                                width='560'\r\n                                height='315'\r\n                                src={item.embedUrl}\r\n                                frameBorder='0'\r\n                                allowFullScreen\r\n                            >\r\n                            </iframe>\r\n                        </div>\r\n                        :\r\n                        <a onClick={this._toggleShowVideo.bind(this, item.embedUrl)}>\r\n                            <div className='play-button'/>\r\n                            <img className='image-gallery-image' src={item.original} alt={\"I'm sorry\"}/>\r\n                            {\r\n                                item.description &&\r\n                                <span\r\n                                    className='image-gallery-description'\r\n                                    style={{right: '0', left: 'initial'}}\r\n                                >\r\n                                    {item.description}\r\n                                </span>\r\n                            }\r\n                        </a>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <section className='app'>\r\n                <ImageGallery\r\n                    ref={i => this._imageGallery = i}\r\n                    items={this.images}\r\n                    onClick={this._onImageClick.bind(this)}\r\n                    onImageLoad={this._onImageLoad}\r\n                    onSlide={this._onSlide.bind(this)}\r\n                    onPause={this._onPause.bind(this)}\r\n                    onScreenChange={this._onScreenChange.bind(this)}\r\n                    onPlay={this._onPlay.bind(this)}\r\n                    infinite={this.state.infinite}\r\n                    showBullets={this.state.showBullets}\r\n                    showFullscreenButton={this.state.showFullscreenButton && this.state.showGalleryFullscreenButton}\r\n                    // showPlayButton={this.state.showPlayButton && this.state.showGalleryPlayButton}\r\n                    showThumbnails={this.state.showThumbnails}\r\n                    showIndex={this.state.showIndex}\r\n                    showNav={this.state.showNav}\r\n                    isRTL={this.state.isRTL}\r\n                    thumbnailPosition={this.state.thumbnailPosition}\r\n                    slideDuration={parseInt(this.state.slideDuration)}\r\n                    slideInterval={parseInt(this.state.slideInterval)}\r\n                    slideOnThumbnailOver={this.state.slideOnThumbnailOver}\r\n                    additionalClass=\"app-image-gallery\"\r\n                    useWindowKeyDown={this.state.useWindowKeyDown}\r\n                />\r\n\r\n                {/* <div className='app-sandbox'>\r\n\r\n          <div className='app-sandbox-content'>\r\n            <h2 className='app-header'>Settings</h2>\r\n\r\n            <ul className='app-buttons'>\r\n              <li>\r\n                <div className='app-interval-input-group'>\r\n                  <span className='app-interval-label'>Play Interval</span>\r\n                  <input\r\n                    className='app-interval-input'\r\n                    type='text'\r\n                    onChange={this._handleInputChange.bind(this, 'slideInterval')}\r\n                    value={this.state.slideInterval}/>\r\n                </div>\r\n              </li>\r\n\r\n              <li>\r\n                <div className='app-interval-input-group'>\r\n                  <span className='app-interval-label'>Slide Duration</span>\r\n                  <input\r\n                    className='app-interval-input'\r\n                    type='text'\r\n                    onChange={this._handleInputChange.bind(this, 'slideDuration')}\r\n                    value={this.state.slideDuration}/>\r\n                </div>\r\n              </li>\r\n\r\n              <li>\r\n                <div className='app-interval-input-group'>\r\n                  <span className='app-interval-label'>Thumbnail Bar Position</span>\r\n                  <select\r\n                    className='app-interval-input'\r\n                    value={this.state.thumbnailPosition}\r\n                    onChange={this._handleThumbnailPositionChange.bind(this)}\r\n                  >\r\n                    <option value='bottom'>Bottom</option>\r\n                    <option value='top'>Top</option>\r\n                    <option value='left'>Left</option>\r\n                    <option value='right'>Right</option>\r\n                  </select>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n\r\n            <ul className='app-checkboxes'>\r\n              <li>\r\n                <input\r\n                  id='infinite'\r\n                  type='checkbox'\r\n                  onChange={this._handleCheckboxChange.bind(this, 'infinite')}\r\n                  checked={this.state.infinite}/>\r\n                  <label htmlFor='infinite'>allow infinite sliding</label>\r\n              </li>\r\n              <li>\r\n                <input\r\n                  id='show_fullscreen'\r\n                  type='checkbox'\r\n                  onChange={this._handleCheckboxChange.bind(this, 'showFullscreenButton')}\r\n                  checked={this.state.showFullscreenButton}/>\r\n                  <label htmlFor='show_fullscreen'>show fullscreen button</label>\r\n              </li>\r\n              <li>\r\n                <input\r\n                  id='show_playbutton'\r\n                  type='checkbox'\r\n                  onChange={this._handleCheckboxChange.bind(this, 'showPlayButton')}\r\n                  checked={this.state.showPlayButton}/>\r\n                  <label htmlFor='show_playbutton'>show play button</label>\r\n              </li>\r\n              <li>\r\n                <input\r\n                  id='show_bullets'\r\n                  type='checkbox'\r\n                  onChange={this._handleCheckboxChange.bind(this, 'showBullets')}\r\n                  checked={this.state.showBullets}/>\r\n                  <label htmlFor='show_bullets'>show bullets</label>\r\n              </li>\r\n              <li>\r\n                <input\r\n                  id='show_thumbnails'\r\n                  type='checkbox'\r\n                  onChange={this._handleCheckboxChange.bind(this, 'showThumbnails')}\r\n                  checked={this.state.showThumbnails}/>\r\n                  <label htmlFor='show_thumbnails'>show thumbnails</label>\r\n              </li>\r\n              <li>\r\n                <input\r\n                  id='show_navigation'\r\n                  type='checkbox'\r\n                  onChange={this._handleCheckboxChange.bind(this, 'showNav')}\r\n                  checked={this.state.showNav}/>\r\n                  <label htmlFor='show_navigation'>show navigation</label>\r\n              </li>\r\n              <li>\r\n                <input\r\n                  id='show_index'\r\n                  type='checkbox'\r\n                  onChange={this._handleCheckboxChange.bind(this, 'showIndex')}\r\n                  checked={this.state.showIndex}/>\r\n                  <label htmlFor='show_index'>show index</label>\r\n              </li>\r\n              <li>\r\n                <input\r\n                  id='is_rtl'\r\n                  type='checkbox'\r\n                  onChange={this._handleCheckboxChange.bind(this, 'isRTL')}\r\n                  checked={this.state.isRTL}/>\r\n                  <label htmlFor='is_rtl'>is right to left</label>\r\n              </li>\r\n              <li>\r\n                <input\r\n                  id='slide_on_thumbnail_hover'\r\n                  type='checkbox'\r\n                  onChange={this._handleCheckboxChange.bind(this, 'slideOnThumbnailOver')}\r\n                  checked={this.state.slideOnThumbnailOver}/>\r\n                  <label htmlFor='slide_on_thumbnail_hover'>slide on mouse over thumbnails</label>\r\n              </li>\r\n              <li>\r\n                <input\r\n                  id='use_window_keydown'\r\n                  type='checkbox'\r\n                  onChange={this._handleCheckboxChange.bind(this, 'useWindowKeyDown')}\r\n                  checked={this.state.useWindowKeyDown}/>\r\n                  <label htmlFor='use_window_keydown'>use window keydown</label>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n\r\n        </div> */}\r\n            </section>\r\n        );\r\n    }\r\n}","import PostGallery from \"./post-gallery\";\r\nexport default PostGallery;","import Post from \"./post\";\r\nexport default Post;","import React from \"react\";\r\nimport \"./post.css\";\r\nimport PostGallery from \"../post-gallery\";\r\n\r\nconst Post = ({title,description,images,dateCreated,keywords}) => {\r\n    return (\r\n        <div className='justify-content-center'>\r\n            <div className=\"d-flex w-100\">\r\n\r\n            </div>\r\n            <h5 className=\"mb-1\">{title}</h5>\r\n            <small className=\"text-muted\">keywords: {keywords.join(' ')}</small>\r\n            <p className=\"mb-1\">{description}</p>\r\n            {images\r\n                ? <PostGallery images={images}/>\r\n                : null\r\n            }\r\n            <small className=\"text-muted\">{dateCreated}</small>\r\n        </div>\r\n    )\r\n}\r\nexport default Post;","import PostList from \"./post-list\";\r\nexport default PostList;","import React from \"react\";\r\nimport Post from \"../post\";\r\n\r\nconst PostList = (props) => {\r\n    const listItems = props.posts.map((post,index) => {\r\n        const {title,description,date_created,keywords} = post.data;\r\n        const {image} = post;\r\n        return (\r\n        <li id={index} className=\"list-group-item list-group-item-action flex-column align-items-start\">\r\n            <Post\r\n                title={title}\r\n                images={[image]}\r\n                description={description}\r\n                dateCreated={date_created}\r\n                keywords={keywords}\r\n            />\r\n        </li>\r\n        )\r\n    });\r\n    return (\r\n        <div className='justify-content-center row'>\r\n            <ul className=\"post-list list-group col-md-8\">\r\n                {Array.isArray(listItems) && listItems.length?listItems:null}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default PostList;","export default class NasaApiGov {\r\n    _baseApi = \"https://images-api.nasa.gov/\";\r\n\r\n    getSearch = (searchString) => {\r\n        const {_baseApi} = this;\r\n        return fetch(`${_baseApi}search?q=${searchString}&page=1&media_type=image`)\r\n            .then(response => response.json())\r\n            .then(({collection}) =>\r\n                Promise.all(collection.items.map(item => {\r\n                        if (item?.href)\r\n                            return fetch(item.href)\r\n                                .then(response => response.json())\r\n                                .then(list => list.slice(1, -1))\r\n                                .then(uris => ({\r\n                                        data:item.data[0],\r\n                                        image: {\r\n                                            original: uris[0],\r\n                                            thumbnail: uris[uris.length - 1]\r\n                                        }\r\n                                    }\r\n                                ));\r\n                        else\r\n                            return new Promise(resolve => resolve('no image'));\r\n                    }\r\n                )))\r\n            .catch(err => err);\r\n    }\r\n}","import React, {Component} from 'react';\r\n\r\nexport default class AddPanel extends Component {\r\n    state = {\r\n        message: ''\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({message: e.target.value})\r\n    }\r\n\r\n    handleUpdate(form) {\r\n        console.log(form)\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state.message);\r\n    }\r\n\r\n    render() {\r\n        const {message} = this.state;\r\n        const {handleChange, handleSubmit} = this;\r\n        return (\r\n            <div className=\"add-panel row justify-content-center\">\r\n                <form className='col-md-6' data-dashlane-rid=\"8ae3f8bcca604e53\" data-form-type=\"ot\">\r\n                    <fieldset>\r\n                        <legend>Пост</legend>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"messageField\" className=\"form-label mt-4\">Введите текст поста</label>\r\n                            <textarea className=\"form-control\" id=\"messageField\" rows=\"6\"\r\n                                      data-dashlane-rid=\"c6d6a82a50c70dfa\" data-form-type=\"other\"\r\n                                      value={message} onChange={handleChange}/>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"formFile\" className=\"form-label mt-4\">Прикрепите файлы</label>\r\n                            <input className=\"form-control\" type=\"file\" id=\"formFile\"\r\n                                   data-dashlane-rid=\"593a641d2ae27fb0\"\r\n                                   data-form-type=\"other\" multiple/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <button type=\"button\" className=\"form-control btn btn-primary\" data-dashlane-rid=\"85d62f37c4e4b00f\"\r\n                                    data-dashlane-label=\"true\" data-form-type=\"action\"\r\n                                    onClick={handleSubmit}>Подготовить к публикации\r\n                            </button>\r\n                        </div>\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import SearchPanel from \"./search-panel\";\r\nexport default SearchPanel;","import React, {useState} from \"react\";\r\n\r\nconst SearchPanel = (props) => {\r\n    const [searchString, setSearchString] = useState(\"\");\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label className=\"col-form-label mt-4\" htmlFor=\"inputDefault\">Default input</label>\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"Default input\" id=\"inputDefault\"\r\n                   data-dashlane-rid=\"e6ebd68441b8e168\" data-form-type=\"other\"\r\n                   value={searchString}\r\n                   onChange={(e) => setSearchString(e.target.value)}\r\n                   onKeyPress={(e) => {\r\n                       if (e.key === 'Enter') {\r\n                           props.setSearch(searchString);\r\n                       }\r\n                   }\r\n                   }/>\r\n        </div>\r\n    )\r\n}\r\nexport default SearchPanel;","import App from \"./app\";\r\nexport default App;","import React, {useEffect, useState} from \"react\";\r\nimport './app.css';\r\nimport RowGroups from \"../row-groups\";\r\nimport {PostManagerServiceConsumer} from \"../post-manager-service-context\";\r\nimport PostList from \"../post-list\";\r\nimport AddPanel from \"../add-panel\";\r\nimport NasaApiGov from '../../services/nasa-api-gov';\r\n\r\nimport SearchPanel from \"../search-panel\";\r\n\r\nconst App = () => {\r\n\r\n    const [listPosts, setListPosts] = useState([]);\r\n    const [search,setSearch] = useState(\"\");\r\n    useEffect(() => {\r\n        const nasaApiGov = new NasaApiGov();\r\n        nasaApiGov\r\n            .getSearch(search)\r\n            .then(list => {\r\n                setListPosts(list.slice(0,6));\r\n            });\r\n        return ()=>setListPosts([]);\r\n    }, [search]);\r\n    return (\r\n        <div className=\"container\">\r\n            <SearchPanel setSearch={setSearch}/>\r\n            {/*<RowGroups groups={value.getGroups()}/>*/}\r\n            {/*<AddPanel/>*/}\r\n            <PostList posts={listPosts}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport PostManagerService from './services/post-manager-service';\nimport './index.css';\nimport App from \"./components/app\";\nimport {PostManagerServiceProvider} from \"./components/post-manager-service-context\";\n\nReactDOM.render(\n    <React.StrictMode>\n            <PostManagerServiceProvider value={new PostManagerService()}>\n                <Router>\n                    <App/>\n                </Router>\n            </PostManagerServiceProvider>\n    </React.StrictMode>\n    ,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}